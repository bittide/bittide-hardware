# Execute using:
#
#   openocd-vexriscv -f vexriscv_sim_chain.cfg
#

# SPDX-FileCopyrightText: 2024 Google LLC
#
# SPDX-License-Identifier: CC0-1.0

# See vexriscv_sim.cfg for more information on each step taken.

adapter driver jtag_tcp
adapter speed 64000
transport select jtag


set  _ENDIAN little
set _TAP_TYPE 1234

if { [info exists CPUTAPID] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x10001fff
}

set _CHIPNAME vexrisc_ocd

jtag newtap $_CHIPNAME chain0 -expected-id $_CPUTAPID -irlen 4 -ircapture 0x1 -irmask 0x0F
jtag newtap $_CHIPNAME chain1 -expected-id $_CPUTAPID -irlen 4 -ircapture 0x1 -irmask 0x03

target create $_CHIPNAME.cpu0 vexriscv -endian $_ENDIAN -chain-position $_CHIPNAME.chain1
vexriscv readWaitCycles 10
vexriscv cpuConfigFile clash-vexriscv/example-cpu/ExampleCpu.yaml

target create $_CHIPNAME.cpu1 vexriscv -endian $_ENDIAN -chain-position $_CHIPNAME.chain0
vexriscv readWaitCycles 10
vexriscv cpuConfigFile clash-vexriscv/example-cpu/ExampleCpu.yaml

poll_period 50

init

echo "Halting processor"

halt

sleep 1000
