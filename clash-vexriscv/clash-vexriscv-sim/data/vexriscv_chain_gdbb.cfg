# Execute using:
#
#   gdb --command vexriscv_gdb.cfg
#

# SPDX-FileCopyrightText: 2024 Google LLC
#
# SPDX-License-Identifier: CC0-1.0

# Assume "print_a" is running on the CPU
file "target/riscv32imc-unknown-none-elf/debug/print_b"

# Work around issues where simulation is too slow to respond to keep-alive messages,
# confusing either OpenOCD or GDB. Note that it will still complain about "missed"
# deadlines, but it won't fail..
set remotetimeout unlimited

# Connect to OpenOCD
target extended-remote :3334

# List registers
i r

# break on main function entrance
break main

# Jump to start address, should run until it hits main
jump _start

# Run until we hit function "done", meaning it should have printed "a"
disable 1
break print_b::done
continue
disable 2

# Load program
file "target/riscv32imc-unknown-none-elf/debug/print_a"
load

# Jump to start address. Should now output "b".
break print_a::done
jump _start

# Stop running GDB
quit
