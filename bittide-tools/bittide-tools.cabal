cabal-version: 3.8
name: bittide-tools
synopsis:
  Bittide specific tools required for development, CI,
  and testing

version: 0.1
license: Apache-2.0
license-file: LICENSE
author: QBayLogic B.V.
maintainer: devops@qbaylogic.com
copyright: Copyright Â© 2024 Google LLC

common common-options
  default-extensions:
    -- TemplateHaskell is used to support convenience functions such as
    -- 'listToVecTH' and 'bLit'.
    --
    -- `NoImplicitPrelude` is used because Clash offers Clash.Prelude
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    NoStarIsType
    PolyKinds
    QuasiQuotes
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    ViewPatterns

  ghc-options:
    -- Plugins to support type-level constraint solving on naturals:
    --   - GHC.TypeLits.Extra.Solver
    --   - GHC.TypeLits.Normalise
    --   - GHC.TypeLits.KnownNat.Solver
    -- Clash needs access to the source code in compiled modules:
    --   -fexpose-all-unfoldings
    -- Worker wrappers introduce unstable names for functions that might have
    -- blackboxes attached for them. You can disable this, but be sure to add
    -- a no-specialize pragma to every function with a blackbox.
    --   -fno-worker-wrapper
    -Wall
    -Wcompat
    -haddock
    -fplugin=GHC.TypeLits.Extra.Solver
    -fplugin=GHC.TypeLits.Normalise
    -fplugin=GHC.TypeLits.KnownNat.Solver
    -fexpose-all-unfoldings
    -fno-worker-wrapper

  build-depends:
    -- clash-prelude will set suitable version bounds for the plugins
    Cabal,
    base,
    clash-prelude >=1.7.0 && <1.10,
    ghc-typelits-extra,
    ghc-typelits-knownnat,
    ghc-typelits-natnormalise,

  default-language: Haskell2010

executable program-stream
  import: common-options
  ghc-options:
    -Wall
    -Wcompat
    -threaded

  main-is: program/stream/Main.hs
  build-depends:
    base,
    bittide,
    bytestring,
    clash-prelude,

executable cc-plot
  import: common-options
  main-is: clockcontrol/plot/Main.hs
  build-depends:
    aeson,
    array,
    bittide,
    bittide-experiments,
    bittide-extra,
    bittide-instances,
    bytestring,
    cassava,
    cassava-conduit,
    conduit,
    containers,
    data-default,
    directory,
    extra,
    filepath,
    text,
    typelits-witnesses,
    unordered-containers,
    utf8-string,
    vector,

  default-extensions: ImplicitPrelude
  -- enable rtsopts so we can setup memory limits
  ghc-options:
    -Wall
    -Wcompat
    -threaded
    -rtsopts
