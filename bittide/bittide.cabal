cabal-version:       2.4
name:                bittide
synopsis:            Bittide hardware descriptions, which should be
                     target independent, loosely connected / standalone
version:             0.1
License:             Apache-2.0
license-file:        LICENSE
author:              QBayLogic B.V.
maintainer:          devops@qbaylogic.com
Copyright:           Copyright Â© 2022-2024 Google LLC

data-files:
  data/clock_configs/*.csv

custom-setup
  setup-depends: Cabal, base, directory, process, filepath, extra

-- You probably want add a `cabal.project.local` that looks like:
--
--   package bittide
--      flags: -rusty-callisto
--
flag rusty-callisto
  description:
    Enable the Rust FFI for the Callisto clock control. Disable this if you want
    working HLS for the bittide package. Obviously, any tests using the Callisto
    Rust implementation will fail.
  default: True
  manual: True

common common-options
  default-extensions:
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    InstanceSigs
    KindSignatures
    LambdaCase
    NoStarIsType
    PolyKinds
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    ViewPatterns

    -- TemplateHaskell is used to support convenience functions such as
    -- 'listToVecTH' and 'bLit'.
    TemplateHaskell
    QuasiQuotes

    -- Prelude isn't imported by default as Clash offers Clash.Prelude
    NoImplicitPrelude
  ghc-options:
    -Wall -Wcompat
    -- Plugins to support type-level constraint solving on naturals
    -fplugin GHC.TypeLits.Extra.Solver
    -fplugin GHC.TypeLits.Normalise
    -fplugin GHC.TypeLits.KnownNat.Solver
    -fconstraint-solver-iterations=8

    -- Clash needs access to the source code in compiled modules
    -fexpose-all-unfoldings

    -- Worker wrappers introduce unstable names for functions that might have
    -- blackboxes attached for them. You can disable this, but be sure to add
    -- a no-specialize pragma to every function with a blackbox.
    -fno-worker-wrapper

    -- Strict annotations - while sometimes preventing space leaks - trigger
    -- optimizations Clash can't deal with. See:
    --
    --    https://github.com/clash-lang/clash-compiler/issues/2361
    --
    -- These flags disables the optimization.
    -fno-unbox-small-strict-fields
    -fno-unbox-strict-fields
  default-language: Haskell2010
  build-depends:
    ghc-typelits-extra >= 0.4.4,
    ghc-typelits-knownnat >= 0.7.7,
    ghc-typelits-natnormalise >= 0.7.7,

library
  import: common-options
  hs-source-dirs: src
  build-depends:
    Cabal,
    aeson,
    array,
    base,
    bittide-extra,
    bytestring,
    cassava,
    clash-cores,
    clash-lib >= 1.6.3 && < 1.10,
    clash-prelude >= 1.6.3 && < 1.10,
    clash-protocols,
    clash-vexriscv,
    constraints >= 0.13.3 && < 0.15,
    containers >= 0.4.0 && < 0.7,
    directory,
    elf,
    exceptions,
    extra,
    filepath,
    infinite-list,
    mtl,
    pretty-show,
    process,
    random,
    string-interpolate ^>= 0.3,
    template-haskell,
    text,
  exposed-modules:
    Bittide.Arithmetic.Ppm
    Bittide.Arithmetic.Time
    Bittide.Axi4
    Bittide.Calendar
    Bittide.ClockControl
    Bittide.ClockControl.Callisto
    Bittide.ClockControl.Callisto.Types
    Bittide.ClockControl.Callisto.Util
    Bittide.ClockControl.Foreign.Rust.Callisto
    Bittide.ClockControl.Foreign.Sizes
    Bittide.ClockControl.ParseRegisters
    Bittide.ClockControl.Registers
    Bittide.ClockControl.Si5391A
    Bittide.ClockControl.Si5395J
    Bittide.ClockControl.Si539xSpi
    Bittide.ClockControl.StabilityChecker
    Bittide.Counter
    Bittide.DoubleBufferedRam
    Bittide.ElasticBuffer
    Bittide.Link
    Bittide.Node
    Bittide.ObliviousFifo
    Bittide.ProcessingElement
    Bittide.ProcessingElement.DeviceTreeCompiler
    Bittide.ProcessingElement.ProgramStream
    Bittide.ProcessingElement.ReadElf
    Bittide.ProcessingElement.Util
    Bittide.ScatterGather
    Bittide.SharedTypes
    Bittide.Switch
    Bittide.Transceiver
    Bittide.Transceiver.Cdc
    Bittide.Transceiver.Comma
    Bittide.Transceiver.Prbs
    Bittide.Transceiver.ResetManager
    Bittide.Transceiver.WordAlign
    Bittide.Wishbone
    Clash.Cores.Extra
    Clash.Cores.UART.Extra
    Clash.Cores.Xilinx.Extra
    Clash.Cores.Xilinx.GTH
    Clash.Cores.Xilinx.GTH.BlackBoxes
    Clash.Cores.Xilinx.GTH.Internal
    Clash.Cores.Xilinx.Xpm.Cdc.Handshake.Extra
    Clash.Explicit.Reset.Extra
    Clash.Functor.Extra
    Clash.Sized.Extra
    Data.Constraint.Nat.Extra
    System.IO.Temp.Extra
  other-modules:
    Paths_bittide

  if flag(rusty-callisto)
    extra-libraries: callisto_lib
    cpp-options: -DRUSTY_CALLISTO

test-suite doctests
  type:             exitcode-stdio-1.0
  default-language: Haskell2010
  main-is:          doctests.hs
  ghc-options:      -Wall -Wcompat -threaded
  hs-source-dirs:   tests

  build-depends:
    base,
    bittide,
    doctest-parallel >= 0.3.0.1 && < 0.4,
    filepath

test-suite unittests
  import: common-options
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  main-is: UnitTests.hs
  ghc-options: -Wall -Wcompat -threaded -rtsopts -with-rtsopts=-N12
  other-modules:
    Tests.Axi4
    Tests.Calendar
    Tests.ClockControl.Si539xSpi
    Tests.Counter
    Tests.DoubleBufferedRam
    Tests.ElasticBuffer
    Tests.Link
    Tests.ProcessingElement.ReadElf
    Tests.ScatterGather
    Tests.Shared
    Tests.StabilityChecker
    Tests.Switch
    Tests.Transceiver.Prbs
    Tests.Transceiver.WordAlign
    Tests.Transceiver
    Tests.Wishbone
  build-depends:
    base,
    bittide-extra,
    bittide,
    bytestring,
    clash-cores,
    clash-lib,
    clash-prelude-hedgehog >= 1.6 && < 1.10,
    clash-prelude,
    clash-protocols,
    constraints >= 0.13.3 && < 0.15,
    containers,
    containers,
    elf,
    extra,
    hedgehog >= 1.0 && < 1.5,
    HUnit,
    tasty >= 1.4 && < 1.6,
    tasty-expected-failure,
    tasty-hedgehog >= 1.2 && < 1.5,
    tasty-hunit,
    tasty-th,
