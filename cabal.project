-- SPDX-FileCopyrightText: 2022 Google LLC
--
-- SPDX-License-Identifier: CC0-1.0
packages:
  bittide-experiments/
  bittide-extra/
  bittide-instances/
  bittide-shake/
  bittide-tools/
  bittide/
  clash-bitpackc/
  clash-protocols-memmap/
  clash-vexriscv/clash-vexriscv/
  gdb-hs/
  ghc-typelits-extra-lemmas/
  vivado-hs/

write-ghc-environment-files: always
-- index state, to go along with the cabal.project.freeze file. update the index
-- state by running `cabal update` twice and looking at the index state it
-- displays to you (as the second update will be a no-op)
index-state: 2025-06-08T16:12:59Z
tests: True

package bittide
  -- Tweak haddock stylesheet to enable word wrapping of types.
  -- We specify the default Linuwial theme as an alternate
  -- so we're able to import its css file from the custom theme.
  haddock-options: --theme=linuwial-wrap-types.css --theme=Linuwial

package zlib
  flags: +pkg-config

-- Reduces build times by ~10%, but triggers a bug in haskell-language-server:
-- https://github.com/haskell/haskell-language-server/issues/4595
--package *
--  ghc-options: +RTS -A64M -RTS
semaphore: true
jobs: $ncpus

-- We need an up-to-date Clash and libraries. Among other features, this adds
-- support for dynamic clocks and Xilinx primitive support.
source-repository-package
  type: git
  location: https://github.com/clash-lang/clash-compiler.git
  tag: 386c9606b18a8363bbb5f6907c9e692b34129840
  subdir:
    clash-prelude
    clash-ghc
    clash-lib
    clash-prelude-hedgehog

source-repository-package
  type: git
  location: https://github.com/clash-lang/clash-cores.git
  tag: 28ba84e088517993ca7e6c1e83e262445a07731b

source-repository-package
  type: git
  location: https://github.com/clash-lang/clash-protocols.git
  tag: 14395b4a4f6e3bb1f6daf2c1fdc5b5dbaeb1b9dd
  subdir:
    clash-protocols
    clash-protocols-base

source-repository-package
  type: git
  location: https://github.com/cchalmers/circuit-notation.git
  tag: 564769c52aa05b90f81bbc898b7af7087d96613d

allow-newer:
  clash-protocols:tasty,
  clash-vexriscv:base

-- Allow us to load multiple packages into a REPL session at once. For example:
--
--   cabal repl bittide bittide:unittests
--
-- Can also be used in combination with ghcid:
--
--   ghcid -c cabal repl bittide bittide:unittests
--
-- Note that it is not limited to units from the same Cabal file:
--
--   cabal repl bittide bittide:unittests bittide-instances bittide-instance:unittests
--
-- Finally, we maintain a script that loads _all_ development packages:
--
--   repld
--
-- This is also usable in combination with ghcid:
--
--   ghcid -c repld
multi-repl: True
