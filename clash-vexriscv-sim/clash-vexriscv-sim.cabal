cabal-version:       2.4
name:                clash-vexriscv-sim
version:             0.1
License:             Apache-2.0
license-file:        LICENSE
author:              QBayLogic B.V.
maintainer:          devops@qbaylogic.com
Copyright:           Copyright Â© 2022 Google LLC

extra-source-files:
  data/*.cfg

common common-options
  default-extensions:
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    InstanceSigs
    KindSignatures
    LambdaCase
    NoStarIsType
    PolyKinds
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    ViewPatterns

    -- TemplateHaskell is used to support convenience functions such as
    -- 'listToVecTH' and 'bLit'.
    TemplateHaskell
    QuasiQuotes

    -- Prelude isn't imported by default as Clash offers Clash.Prelude
    NoImplicitPrelude

  -- See https://github.com/clash-lang/clash-compiler/pull/2511
  if impl(ghc >= 9.4)
    CPP-Options: -DCLASH_OPAQUE=OPAQUE
  else
    CPP-Options: -DCLASH_OPAQUE=NOINLINE

  ghc-options:
    -Wall -Wcompat

    -- Plugins to support type-level constraint solving on naturals
    -fplugin GHC.TypeLits.Extra.Solver
    -fplugin GHC.TypeLits.Normalise
    -fplugin GHC.TypeLits.KnownNat.Solver

    -- Clash needs access to the source code in compiled modules
    -fexpose-all-unfoldings

    -- Worker wrappers introduce unstable names for functions that might have
    -- blackboxes attached for them. You can disable this, but be sure to add
    -- a no-specialize pragma to every function with a blackbox.
    -fno-worker-wrapper
      -- clash-prelude will set suitable version bounds for the plugins
  build-depends:
    base >= 4.14 && < 4.19,
    clash-prelude >= 1.6 && < 1.10,
    containers >= 0.6 && < 0.8,
    ghc-typelits-natnormalise,
    ghc-typelits-extra,
    ghc-typelits-knownnat,

library
  import: common-options
  hs-source-dirs: src
  default-language: Haskell2010
  exposed-modules:
    Utils.Cpu
    Utils.Instance
    Utils.Interconnect
    Utils.ProgramLoad
    Utils.ReadElf
    Utils.Storage
  build-depends:
    base,
    bytestring >= 0.10 && < 0.13,
    clash-prelude,
    clash-protocols,
    clash-vexriscv,
    elf >= 0.31 && < 0.32,

-- XXX: Doesn't really belong in clash-vexriscv-SIM
executable hdl-test
  import: common-options
  main-is: app/HdlTest.hs
  build-Depends:
    base,
    clash-ghc,
    clash-vexriscv-sim,

executable clash-vexriscv-bin
  import: common-options
  main-is: VexRiscvSimulation.hs
  hs-source-dirs: app
  default-language: Haskell2010
  ghc-options: -threaded -rtsopts "-with-rtsopts=-M100M"
  build-depends:
    base,
    clash-prelude,
    clash-protocols,
    clash-vexriscv,
    clash-vexriscv-sim,
    bytestring,
    containers,
    directory,

test-suite unittests
  import: common-options
  default-language: Haskell2010
  hs-source-dirs: tests
  type: exitcode-stdio-1.0
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-tool-depends:
    clash-vexriscv-sim:clash-vexriscv-bin
  autogen-modules:
    Paths_clash_vexriscv_sim
  ghc-options: -threaded
  main-is: tests.hs
  other-modules:
    Paths_clash_vexriscv_sim
    Tests.Jtag
  build-depends:
    async,
    base,
    bytestring,
    clash-prelude,
    clash-protocols,
    clash-vexriscv-sim,
    clash-vexriscv,
    containers,
    directory,
    extra,
    filepath,
    process,
    tasty >= 1.2 && < 1.6,
    tasty-hunit >= 0.10 && < 0.11,
    temporary >=1.1 && <1.4,
